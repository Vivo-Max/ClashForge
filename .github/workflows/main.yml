name: Daily Clash Config Generation and Conversion

# 触发条件：每天 UTC 时间 0:00 运行
on:
  schedule:
    - cron: '0 0 * * *'
  # 允许手动触发
  workflow_dispatch:

jobs:
  generate-and-convert-clash-config:
    runs-on: ubuntu-latest

    steps:
      # 检出代码仓库
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 安装系统依赖（包括 wget 和 unzip，用于下载和解压 Clash 二进制文件）
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip jq

      # 安装 Python 依赖
      - name: Install Python Dependencies
        run: |
          pip install --upgrade pip
          pip install pyyaml httpx requests requests-html psutil lxml_html_clean

      # 运行 ClashForge.py 脚本生成 Clash 配置文件
      - name: Run ClashForge Script
        run: |
          python ClashForge.py

      # 检查生成的 Clash 配置文件是否存在
      - name: Check Generated Clash Files
        run: |
          ls -l clash_config.yaml clash_config.yaml.json || echo "Clash config files not found"

      # 安装最新版 clash2singbox CLI 工具
      - name: Install clash2singbox
        run: |
          wget $(curl -s https://api.github.com/repos/xmdhs/clash2singbox/releases/latest | grep "browser_download_url.*linux-amd64" | cut -d\" -f4)
          mv clash2singbox-linux-amd64 clash2singbox
          chmod +x clash2singbox

      # 转换 Clash 配置文件为 sing-box 配置文件
      - name: Convert Clash Config to Sing-Box Config
        run: |
          ./clash2singbox -i clash_config.yaml -o sing-box_config_temp.json

      # 验证并补全 sing-box 配置文件
      - name: Validate and Enhance Sing-Box Config
        run: |
          # 检查 JSON 格式
          jq . sing-box_config_temp.json > sing-box_config.json || (echo "sing-box 配置格式无效" && exit 1)
          # 添加必要的默认字段
          jq 'if has("log") then . else . + {"log": {"level": "info"}} end |
              if has("dns") then . else . + {"dns": {"servers": [{"tag": "google", "address": "8.8.8.8"}]}} end' \
              sing-box_config.json > sing-box_config.json.tmp
          mv sing-box_config.json.tmp sing-box_config.json

      # 检查生成的 sing-box 配置文件是否存在
      - name: Check Generated Sing-Box Files
        run: |
          ls -l sing-box_config.json || echo "Sing-box config file not found"

      # 提交生成的配置文件到仓库
      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add clash_config.yaml clash_config.yaml.json sing-box_config.json
          git commit -m "Update Clash and Sing-Box configuration files - $(date +'%Y-%m-%d')"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 处理提交失败的情况（例如没有新文件）
      - name: Handle Commit Failure
        if: failure()
        run: |
          echo "No changes to commit or commit failed, continuing..."
