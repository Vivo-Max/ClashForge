name: Clash Proxy Workflow
on:
  push:
    branches: [main]
  schedule:
    - cron: '0 0 * * *'  # 每天凌晨运行
  workflow_dispatch:  # 支持手动触发

jobs:
  run-script:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # 安装依赖
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pyyaml httpx requests-html psutil

      # 更新 CA 证书（避免 SSL 错误）
      - name: Update CA certificates
        run: sudo apt-get update && sudo apt-get install -y ca-certificates

      # 缓存 Clash 二进制
      - name: Cache Clash binary
        id: cache-clash
        uses: actions/cache@v3
        with:
          path: clash-linux
          key: clash-binary-${{ runner.os }}-v1.18.9

      # 下载 Clash 二进制（如果缓存未命中）
      - name: Download Clash binary
        if: steps.cache-clash.outputs.cache-hit != 'true'
        run: |
          curl -L -o clash.gz "https://github.com/MetaCubeX/mihomo/releases/download/v1.18.9/mihomo-linux-amd64-compatible.gz"
          gunzip clash.gz
          chmod +x clash
          mv clash clash-linux

      # 缓存 clash2singbox 二进制
      - name: Cache clash2singbox binary
        id: cache-singbox
        uses: actions/cache@v3
        with:
          path: clash2singbox
          key: singbox-binary-${{ runner.os }}-v0.0.1

      # 下载 clash2singbox 二进制（如果缓存未命中）
      - name: Download clash2singbox binary
        if: steps.cache-singbox.outputs.cache-hit != 'true'
        run: |
          curl -L -o clash2singbox "https://github.com/Querium/clash2singbox/releases/download/v0.0.1/clash2singbox-linux-amd64"
          chmod +x clash2singbox

      # 创建 input 文件夹并添加示例节点文件（可选）
      - name: Set up input directory
        run: |
          mkdir -p input
          echo "ss://example@server:port#name Obligatory: true" > input/nodes.txt

      # 运行脚本
      - name: Run Clash script
        env:
          GITHUB_WORKSPACE: ${{ github.workspace }}
        run: python script.py

      # 上传生成的文件
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: clash-config
          path: |
            clash_config.yaml
            clash_config.yaml.json
            clash_singbox.json
