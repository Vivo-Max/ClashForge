name: Daily Clash Config Generation and Conversion

# 触发条件：每天 UTC 时间 0:00 运行
on:
  schedule:
    - cron: '0 0 * * *'
  # 允许手动触发
  workflow_dispatch:

jobs:
  generate-and-convert-clash-config:
    runs-on: ubuntu-latest

    steps:
      # 检出代码仓库
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 设置 Python 环境
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 安装系统依赖（包括 wget、unzip 和 jq）
      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip jq

      # 安装 Python 依赖
      - name: Install Python Dependencies
        run: |
          pip install --upgrade pip
          pip install pyyaml httpx requests requests-html psutil lxml_html_clean

      # 运行 ClashForge.py 脚本生成 Clash 配置文件
      - name: Run ClashForge Script
        run: |
          python ClashForge.py

      # 检查生成的 Clash 配置文件是否存在并调试
      - name: Check Generated Clash Files
        run: |
          ls -l clash_config.yaml clash_config.yaml.json || echo "Clash config files not found"
          echo "Line 405:"
          sed -n '405p' clash_config.yaml
          echo "Line 1066:"
          sed -n '1066p' clash_config.yaml
          echo "Context around Line 405:"
          sed -n '401,409p' clash_config.yaml
          echo "Context around Line 1066:"
          sed -n '1062,1070p' clash_config.yaml
          echo "Checking for string '0' occurrences:"
          grep -n ': "0"' clash_config.yaml || echo "No ': \"0\"' found"

      # 修复 clash_config.yaml 中字符串 "0" 为整数 0
      - name: Fix YAML String Zero
        run: |
          sed -i 's/: "0"/: 0/g' clash_config.yaml
          # 验证修复结果
          echo "After fixing, checking for remaining ': \"0\"':"
          grep -n ': "0"' clash_config.yaml || echo "No ': \"0\"' remaining"

      # 安装最新版 clash2singbox CLI 工具
      - name: Install clash2singbox
        run: |
          wget $(curl -s https://api.github.com/repos/xmdhs/clash2singbox/releases/latest | grep "browser_download_url.*linux-amd64" | cut -d\" -f4)
          mv clash2singbox-linux-amd64 clash2singbox
          chmod +x clash2singbox

      # 转换 Clash 配置文件为 sing-box 配置文件
      - name: Convert Clash Config to Sing-Box Config
        run: |
          ./clash2singbox -i clash_config.yaml -o sing-box_config_temp.json

      # 验证并修复 sing-box 配置文件
      - name: Validate and Enhance Sing-Box Config
        run: |
          # 验证 JSON 格式
          jq . sing-box_config_temp.json > sing-box_config.json || (echo "sing-box 配置格式无效" && exit 1)

          # 修复 log 配置
          jq 'if .log == {} then .log = {"level": "info"} else . end' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 修复 DNS 配置：将 IP 地址改为 DoH 地址
          jq '.dns.servers |= map(
            if .tag == "remote" then .address = "https://8.8.8.8/dns-query" else
            if .tag == "local" then .address = "https://223.5.5.5/dns-query" else . end end
          )' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 添加 experimental.cache_file
          jq '.experimental |= . + {"cache_file": {"enabled": true}}' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 修复 inbounds.tun：替换 inet4_address 和 inet6_address 为 address 数组
          jq '.inbounds |= map(
            if .type == "tun" then 
              .address = [
                (if .inet4_address then .inet4_address else "172.19.0.1/30" end),
                (if .inet6_address then .inet6_address else "fdfe:dcba:9876::1/126" end)
              ] | 
              del(.inet4_address) | 
              del(.inet6_address) | 
              .auto_route = true 
            else . end
          )' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 移除 inbounds 中的 domain_strategy 和 set_system_proxy
          jq '.inbounds |= map(
            del(.domain_strategy) | 
            del(.set_system_proxy)
          )' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 添加 route.rule_set
          jq '.route.rule_set = [
            {"tag": "geoip-cn", "type": "remote", "format": "binary", "url": "https://raw.githubusercontent.com/SagerNet/sing-geoip/rule-set/geoip-cn.srs"},
            {"tag": "geosite-cn", "type": "remote", "format": "binary", "url": "https://raw.githubusercontent.com/xmdhs/sing-geosite/rule-set-Loyalsoldier/geosite-geolocation-cn.srs"},
            {"tag": "AdGuardSDNSFilter", "type": "remote", "format": "binary", "url": "https://raw.githubusercontent.com/xmdhs/sing-box-ruleset/rule-set/AdGuardSDNSFilterSingBox.srs"},
            {"tag": "chrome-doh", "type": "remote", "format": "source", "url": "https://gist.githubusercontent.com/xmdhs/71fc5ff6ef29f5ecaf2c52b8de5c3172/raw/chrome-doh.json"},
            {"tag": "ext-cn-domain", "type": "remote", "format": "binary", "url": "https://raw.githubusercontent.com/xmdhs/cn-domain-list/rule-set/ext-cn-list.srs"}
          ]' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 修复 route.rules：替换 geoip 和 geosite 为 rule_set
          jq '.route.rules |= map(
            if .geoip then 
              .rule_set = "geoip-cn" | 
              del(.geoip) | 
              if .outbound == "direct" then . + {"ip_is_private": true} else . end 
            else 
              if .geosite then .rule_set = (.geosite | if . == "category-ads-all" then "AdGuardSDNSFilter" else "geosite-cn" end) | del(.geosite) else . end 
            end
          )' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 添加 route.rules 中的 action 规则
          jq '.route.rules += [
            {"action": "sniff"},
            {"action": "hijack-dns", "protocol": "dns"},
            {"action": "resolve", "strategy": "prefer_ipv4"}
          ]' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 修复 dns.rules：替换 geosite 为 rule_set
          jq '.dns.rules |= map(
            if .geosite then 
              .rule_set = (.geosite | if . == "category-ads-all" then ["AdGuardSDNSFilter", "chrome-doh"] else "geosite-cn" end) | 
              del(.geosite) 
            else . end
          )' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 添加 dns.rules 中 ext-cn-domain 规则
          jq '.dns.rules += [{"rule_set": "ext-cn-domain", "server": "local"}]' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

          # 移除未使用的 dns-out 和 block 出站
          jq '.outbounds |= map(select(.tag != "dns-out" and .tag != "block"))' sing-box_config.json > tmp.json && mv tmp.json sing-box_config.json

      # 检查生成的 sing-box 配置文件是否存在
      - name: Check Generated Sing-Box Files
        run: |
          ls -l sing-box_config.json || echo "Sing-box config file not found"

      # 提交生成的配置文件到仓库
      - name: Commit and Push Changes
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add clash_config.yaml clash_config.yaml.json sing-box_config.json
          git commit -m "Update Clash and Sing-Box configuration files - $(date +'%Y-%m-%d')"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # 处理提交失败的情况（例如没有新文件）
      - name: Handle Commit Failure
        if: failure()
        run: |
          echo "No changes to commit or commit failed, continuing..."
